version: '3.9'

services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      # macOS用パフォーマンス最適化
      - /tmp
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis (Session & Celery)
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Django Web App
  web:
    build: .
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      # macOS用 cached マウント（パフォーマンス向上）
      - .:/app:cached
      # node_modules除外（存在する場合）
      - /app/node_modules
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - DJANGO_SETTINGS_MODULE=config.settings.development

  # Celery Worker (バックグラウンドタスク用)
  celery:
    build: .
    command: celery -A config worker --loglevel=info --concurrency=2
    volumes:
      - .:/app:cached
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - DJANGO_SETTINGS_MODULE=config.settings.development

  # Celery Beat (定期実行タスク用)
  celery-beat:
    build: .
    command: celery -A config beat --loglevel=info
    volumes:
      - .:/app:cached
    env_file:
      - .env
    depends_on:
      - db
      - redis
    environment:
      - DJANGO_SETTINGS_MODULE=config.settings.development

volumes:
  postgres_data:
  redis_data:

# macOS用ネットワーク最適化
networks:
  default:
    driver: bridge